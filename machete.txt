para comenzar el proyecto
npm init



npm run start -> iniciar el proyecto pero tiene que estar esto en package.json:
"scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node index"
    "devstart": "node --watch index " -> recarga el servidor automaticamente -> en modo desarrollo
  },

iniciar el server de dasarrollo poner: npm run devstart


para reconstruir el proyecto, clono el proyecto de github y luego voy a al consola 
y tipeo lo sig: npm install


esto reconstruye la carpeta mode_modules segun lo manisfestado en package.json


para matar procesos control + c

useEffect es un hook que se ejecuta cuando el componente se renderiza, y también cuando cambian las variables que pongas en su lista de dependencias.

-----postman -----
get http://localhost:3000/api/usuarios -> todos los usuarios
get http://localhost:3000/api/usuarios/id que queremos -> usuario de ese id


post http://localhost:3000/api/usuarios -> crear usuarios
    ir a body y poner:
                      {
                         "nombre": "María",
                          "rol": "alumno"
                      }   

put http://localhost:3000/api/usuarios/ id que queremos -> actualiza
    ir a body y poner raw 
                        {
                          "nombre": "María López",
                          "rol": "profe"
                        }


delete http://localhost:3000/api/usuarios/2 -> elimina usuario
----- teoria? ------
Routing-> se refiere a determinar cómo responde una aplicación a una solicitud de cliente a un punto final concreto, 
          que es un URI (o ruta) y un método de solicitud HTTP específico (GET, POST, etc.).

          cada ruta tiene una o mas funciones de controlador que se ejecuta cuando se encuentra una coincidencia con la ruta

          estructura basica -> app.METHOD(PATH, HANDLER)
                              app -> instancia de espress
                              METHOD -> metodo de http en minuscula
                              Path -> ruta del servidor
                              head -> que funcion ejecuta esa ruta
          get -> para gestionar las solicitudes
          post -> gestionar las solicitudes POST
          app.all() para gestionar todos los métodos HTTP 
          app.use() para especificar el middleware como función de devolución de llamada 
                    Un middleware es básicamente una función que se ejecuta entre la petición (request) y la respuesta (response).

          req.params: { "userId": "34", "bookId": "8989" }
          app.get('/users/:userId/books/:bookId', (req, res) => {
            res.send(req.params)
          })          

